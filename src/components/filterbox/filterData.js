const numberOpFunc = (_category) => ['==', '>', '<']

export const filter_options = [
    {
        columnField: "benchmarks",
        type: "array[text]",
        customOperatorFunc: (_category) => ['include', '!include'],
        customValuesFunc: (_c, _o) => benchmark_values,
    },
    {
        columnField: "scenarios",
        type: "array[text]",
        customOperatorFunc: (_category) => ['include', '!include'],
        customValuesFunc: (_c, _o) => scenario_values,
    },
    {
        columnField: "narrations",
        type: "array[text]",
        customOperatorFunc: (_c) => ['contain', '!contain'],
    },
    {
        columnField: "summaries",
        type: "array[text]",
        customOperatorFunc: (_c) => ['contain', '!contain'],
    },
    {
        columnField: "video_uid",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="]
    },
    {
        columnField: "is_stereo",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="],
        customValuesFunc: (_c, _o) => ['true', 'false'],
    },
    {
        columnField: "split_av",
        type: "text",
        customOperatorFunc: (_c) => ['==', '!='],
        customValuesFunc: (_c, _o) => ['test', 'train', 'val'],
    },
    {
        columnField: "split_em",
        type: "text",
        customOperatorFunc: (_c) => ['==', '!='],
        customValuesFunc: (_c, _o) => ['test', 'train', 'val'],
    },
    {
        columnField: "split_fho",
        type: "text",
        customOperatorFunc: (_c) => ['==', '!='],
        customValuesFunc: (_c, _o) => ['test', 'train', 'val', 'multi'],
    },
    {
        columnField: "splits",
        type: "array[text]",
        customOperatorFunc: (_category) => ['include', '!include'],
        customValuesFunc: (_c, _o) => split_values,
    },
    {
        columnField: "device",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="],
        customValuesFunc: (_c, _o) => device_values,
    },
    {
        columnField: "physical_setting_name",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="],
        customValuesFunc: (_c, _o) => physical_setting_name_values,
    },
    {
        columnField: "dimensions",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="],
        customValuesFunc: (_c, _o) => dimension_values,
    },
    {
        columnField: "duration",
        type: "number",
        customOperatorFunc: numberOpFunc
    },
    {
        columnField: "num_frames",
        type: "number",
        customOperatorFunc: numberOpFunc
    },
    {
        columnField: "video_source",
        type: "text",
        customOperatorFunc: (_category) => ['==', "!="],
        customValuesFunc: (_c, _o) => video_source_values,
    },
];

export const device_values = [
    'GoPro - Unknown Model',
    'GoPro Hero 4',
    'GoPro Hero Black 7',
    'GoPro Hero Black 8',
    'GoPro Hero Black 9',
    'GoPro Hero Silver 7',
    'GoPro Max',
    'LeaPower',
    'Ordro EP6 4K',
    'Pupil Labs Invisible',
    'Vuzix',
    'Weeview',
    'Zshade',
    'iVue Rincon 1080P',
    'unknown'
];

export const physical_setting_name_values = [
    'Baker',
    'Bike mechanic',
    'Carpenter',
    'Crafter',
    'Scooter mechanic',
    'barbershop',
    'boardgame',
    'card',
    'forest',
    'groupmeeting',
    'gym',
    'home',
    'hotpot',
    'milktea',
    'photo',
    'restaurant',
    'school',
    'tasession',
    'trail'
]

export const dimension_values = [
    '(1088, 1080)',
    '(1280, 720)',
    '(1440, 1080)',
    '(1440, 2880)',
    '(1920, 1080)',
    '(1920, 1440)',
    '(1921, 1080)',
    '(2560, 1440)',
    '(2560, 1920)',
    '(2880, 1080)',
    '(2880, 1440)',
    '(3413, 1920)',
    '(5760, 2880)',
    '(810, 1080)',
    '(None, None)'
]

export const video_source_values = [
    'bristol',
    'cmu',
    'cmu_africa',
    'frl_track_1_public',
    'georgiatech',
    'iiith',
    'indiana',
    'kaust',
    'minnesota',
    'nus',
    'uniandes',
    'unict',
    'utokyo'
]

export const split_values = [
    'av-train',
    'av-val',
    'fho_hands-train',
    'fho_hands-val',
    'fho_lta-train',
    'fho_lta-val',
    'fho_scod-train',
    'fho_scod-val',
    'fho_sta-train',
    'fho_sta-val',
    'moments-train',
    'moments-val',
    'nlq-train',
    'nlq-val',
    'vq-train',
    'vq-val'
];

export const benchmark_values = ['av', 'moments', 'vq', 'nlq', 'narrations', 'fho_hands', 'fho_lta', 'fho_scod', 'fho_sta'];

export const scenario_values = [
    'ATV scene',
    'Appointments: doctor, dentist',
    'Assembling a puzzle',
    'Assembling furniture',
    'Attending a TA session',
    'Attending a festival or fair',
    'Attending a lecture/class',
    'Attending a party',
    'Attending religious activity',
    'Attending sporting events - watching and participating in',
    "BBQ'ing/picnics",
    'Baker',
    'Baseball',
    'BasketBall',
    'Bike',
    'Bike mechanic',
    'Blacksmith',
    'Bowling',
    'Bus',
    'Camp setup/pack-up/chores',
    'Car - commuting, road trip',
    'Car mechanic',
    'Car/scooter washing',
    'Carpenter',
    'Cleaning / laundry',
    'Cleaning at the gym',
    'Climbing',
    'Clothes, other shopping',
    'Community cleaning',
    'Cooking',
    'Crafting/knitting/sewing/drawing/painting',
    'Crossword puzzle',
    'Cycling / jogging',
    'DEPRECATED : Playing board games',
    'Daily hygiene',
    'Dancing',
    'Doing hair/make-up',
    'Doing yardwork / shoveling snow',
    'Drive-thru food',
    'Drone flying',
    'Eating',
    "Eating at a friend's home",
    'Eating at a restaurant',
    'Eating at the cafeteria',
    'Eating in a canteen',
    'Eating in hawker center',
    'Electronics',
    'Farmer',
    'Fishing',
    'Fixing PC',
    'Fixing musical instrument',
    'Fixing something in the home',
    'Flower Picking',
    'Football',
    'Frisbee',
    'Gaming arcade / pool / billiards',
    'Gardener',
    'Gardening',
    'Getting car fixed',
    'Going to a salon (nail, hair, spa)',
    'Going to the gym - exercise machine, class, weights',
    'Going to the park',
    'Golfing',
    'Grinding mill',
    'Grocery shopping indoors',
    'Hair and Makeup stylist',
    'Handyman',
    'Hanging out at a coffee shop',
    'Hanging out with friends at a bar',
    'Hiking',
    'Hosting a party',
    'Household cleaners',
    'Household management - caring for kids',
    'Indoor Navigation (walking)',
    'Ironing',
    'Jobs Related to Construction',
    'Labwork',
    'Listening to music',
    'Maker Lab',
    'Making Bricks',
    'Making a salad/sandwich',
    'Making coffee',
    'Mehandi',
    'Mini golf',
    'On a screen (phone/laptop)',
    'Outdoor cooking',
    'Outdoor social (includes campfire)',
    'Outdoor technical climbing/belaying/rappelling (includes ropework)',
    'Participating in a meeting',
    'Play with cellphone',
    'Playing Darts',
    'Playing badminton',
    'Playing board games',
    'Playing cards',
    'Playing games / video games',
    'Playing with pets',
    'Potting plants (indoor)',
    'Practicing a musical instrument',
    'Preparing hopot',
    'Pulp Traces Factory (Egges)',
    'Reading books',
    'Reviewing flash cards',
    'Riding motorcycle',
    'Roller skating',
    'Rowing',
    'Scooter mechanic',
    'Skateboard/scooter',
    'Sleeping',
    'Snow sledding',
    'Street art',
    'Swimming in a pool/ocean',
    'Table tennis',
    'Taking photos in photography studio',
    'Talking on the phone',
    'Talking to colleagues',
    'Talking with family members',
    'Talking with friends/housemates',
    'Tourism',
    'Train',
    'Video call',
    'Visiting exhibition',
    'Walking on street',
    'Walking the dog / pet',
    'Washing the dog / pet, grooming horse',
    'Watching movies at the cinema',
    'Watching tv',
    'Working at desk',
    'Working in milktea shop',
    'Working in outdoor store',
    'Working out at home',
    'Working out outside',
    'Writing on whiteboard',
    'Yoga practice',
    'biology experiments',
    'building lego models / plastic models',
    'writing on book'
];
